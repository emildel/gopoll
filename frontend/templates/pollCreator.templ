package templates

templ CreatorChartView(title string, answers []string, pollResults []int, pollId string, env string) {
    <body onload={ loadChart(answers, pollResults, pollId) }>
        <h1 class="flex justify-center text-center px-5 pt-14 pb-10 min-[601px]:pt-28 min-[601px]:pb-20 text-3xl font-extrabold underline">{ title }</h1>

        <div class="bg-[#FCFDFC] p-4">
            <div class="flex justify-center items-center relative m-auto h-[50vh] max-w-[1200px] px-2 min-[601px]:px-4 shadow-lg shadow-slate-200 rounded">
                <canvas id="myChart1"></canvas>
            </div>
        </div>

        <div class="px-4">
            <div class="flex flex-col justify-center items-center text-center mt-20 mb-5">
                <h1 class="text-2xl">Want to easily share this poll with others? Copy the link below!</h1>
            </div>

            <div class="m-auto max-w-[800px] bg-slate-50 border-2 border-[#809D80] rounded-sm px-4">
                <div class="flex justify-between items-center py-1">
                    <code>
                        { getUrlToCopy(pollId, env) }
                    </code>
                    <div class="flex items-center w-[120px]">
                        <button id="copyURLButton"
                            class="w-full py-1 px-2 bg-[#809D80] text-zinc-50 duration-300 cursor-pointer border border-slate-950 hover:bg-[#5c735c] hover:text-white rounded-sm"
                            onclick={ copyUrl(getUrlToCopy(pollId, env)) }
                            role="button">
                        Copy
                        <img src="../assets/images/copy.png" width="20" height="20" class=" mt-1 float-right" />
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        @openEventConnection(pollId)
        <!-- icons from <a href="https://www.flaticon.com/free-icons/copy" title="copy icons">Copy icons created by Freepik - Flaticon</a> -->
    </body>
}

templ PollCreator(title string, answers []string, pollResults []int, pollId string, env string) {
    @Head("GoPoll | Your Poll") {
        @CreatorChartView(title, answers, pollResults, pollId, env)
    }
}

script openEventConnection(pollId string) {

    const eventSource = new EventSource("/updateChart/" + pollId + "?stream="+pollId);

    eventSource.onopen = function() {
        console.log("event openned");
    };

    eventSource.onmessage = (event) => {
        console.log("inside updates listener")
        const chart = Chart.getChart("myChart1");
        const parsedData = JSON.parse(event.data)
        chart.data.datasets[0].data = parsedData.data.results;
        chart.update();
    };
}

script copyUrl(url string) {

    const initialText = document.getElementById('copyURLButton').innerHTML;
    window.navigator.clipboard.writeText(url);

    document.getElementById('copyURLButton').innerHTML = "Copied!";
    setTimeout(function() {
        // Set button text back to what it was before it was changed to Copied!
        document.getElementById('copyURLButton').innerHTML = initialText;
    }, 750);      
}

script loadChart(answers []string, pollResults []int, pollId string) {

    var fontSize = 12;
    if(window.innerWidth > 600) {
        fontSize = 16;
    };

    var data = {
        labels: answers,
        datasets: [{
            label: '# of Votes',
            data: pollResults,
            borderWidth: 1
        }]
    };

    var options = {
        maintainAspectRatio: true,
            scales: {
                y: {
                    beginAtZero: true,
                    grace: 5,
                    ticks: {
                        stepSize: 5
                }
            }
        }
    }

    Chart.defaults.font.size = fontSize;

    var myChart = new Chart("myChart1", {
        type: 'bar',
        data: data,
        options: options
    });
}